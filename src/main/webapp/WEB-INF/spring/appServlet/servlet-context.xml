<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- transaction을 관리할 manager(spring 4.3.22 필수) -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/resources/html/" mapping="/html/**"/>
	<resources location="/resources/image/" mapping="/image/**"/>
	<resources location="/resources/js/" mapping="/js/**"/>
	<resources location="/resources/style/" mapping="/style/**"/>
	<resources location="/resources/upimage/" mapping="/upimage/**"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/testdb"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="12dnjf30dlf"/>
	</beans:bean>
	<!-- MyBatis를 위한 sqlSession -->
	<beans:bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:com/mysqlSpring/testProject/dao/mapper/*.xml"/>
	</beans:bean>
	<beans:bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
	<!-- TransactionManager bean -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>	
	<!-- TransactionTemplate bean -->
	<beans:bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"/>
	</beans:bean>
	
	<!-- password 암호화 bean -->
	<beans:bean name="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- Customized DAO class Bean -->
	<beans:bean name="udao" class="com.mysqlSpring.testProject.dao.UserDao"/>
	<beans:bean name="bdao" class="com.mysqlSpring.testProject.dao.BoardDao"/>

	<context:component-scan base-package="com.mysqlSpring.testProject"/>
</beans:beans>
